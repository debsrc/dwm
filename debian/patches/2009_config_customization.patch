diff --git a/config.def.h b/config.def.h
index 1c0b587..e2b0267 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,21 +1,28 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
-static const unsigned int borderpx  = 1;        /* border pixel of windows */
+static const unsigned int borderpx  = 4;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
+static const unsigned int systraypinning = 0;   /* 0: sloppy systray follows selected monitor, >0: pin systray to monitor X */
+static const unsigned int systrayspacing = 2;   /* systray spacing */
+static const int systraypinningfailfirst = 1;   /* 1: if pinning fails, display systray on the first monitor, False: display systray on the last monitor*/
+static const int showsystray        = 1;     /* 0 means no systray */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
+static const char *fonts[]          = { "DejaVu Sans Mono:pixelsize=20:antialias=true:hinting=true:autohint=true:style=regular" };
+static const char dmenufont[]       = "Monospace:pixelsize=24:antialias=true:hinting=true:autohint=true:style=regular";
 static const char col_gray1[]       = "#222222";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
+static const char col_gray5[]       = "#404040";
+static const char col_black[]       = "#000000";
+static const char col_red[]         = "#ff4500";
 static const char col_cyan[]        = "#005577";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
-	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeNorm] = { col_gray3, col_black, col_black },
+	[SchemeSel]  = { col_gray4, col_gray5,  col_red  },
 };
 
 /* tagging */
@@ -27,8 +34,9 @@ static const Rule rules[] = {
 	 *	WM_NAME(STRING) = title
 	 */
 	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	/* { "Gimp",     NULL,       NULL,       0,            1,           -1 }, */
+	/* { "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 }, */
+	{ NULL,       NULL,       NULL,       0,            False,       -1 }, /* remove application defaults <http://dwm.suckless.org/customisation/noapps> */
 };
 
 /* layout(s) */
@@ -38,13 +46,13 @@ static const int resizehints = 1;    /* 1 means respect size hints in tiled resi
 
 static const Layout layouts[] = {
 	/* symbol     arrange function */
-	{ "[]=",      tile },    /* first entry is default */
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
+	{ "[M]",      monocle },    /* first entry is default */
+	{ "[]=",      tile },    /* no layout function means floating behavior */
+	{ "><>",      NULL },
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask /* change Mod1 key <http://dwm.suckless.org/customisation/windows_key> */
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -56,7 +64,7 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_black, "-nf", col_gray3, "-sb", col_red, "-sf", col_gray4, NULL };
 static const char *termcmd[]  = { "st", NULL };
 
 static Key keys[] = {
@@ -71,11 +79,12 @@ static Key keys[] = {
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
 	{ MODKEY,                       XK_Return, zoom,           {0} },
-	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
-	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
+	{ Mod1Mask,                     XK_Tab,    view,           {0} },
+	{ Mod1Mask|ShiftMask,           XK_Tab,    view,           {0} },
+	{ ControlMask|ShiftMask|Mod1Mask, XK_c,    killclient,     {0} },
+	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[1]} },
+	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[2]} },
+	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_space,  setlayout,      {0} },
 	{ MODKEY|ShiftMask,             XK_space,  togglefloating, {0} },
 	{ MODKEY,                       XK_0,      view,           {.ui = ~0 } },
@@ -113,3 +122,30 @@ static Button buttons[] = {
 	{ ClkTagBar,            MODKEY,         Button3,        toggletag,      {0} },
 };
 
+/* command/control via FIFO <http://dwm.suckless.org/patches/dwmfifo>. */
+static const char *dwmfifo = "/tmp/dwm.fifo";
+static Command commands[] = {
+	{ "focusstack+",     focusstack,     {.i = +1} },
+	{ "focusstack-",     focusstack,     {.i = -1} },
+	{ "killclient",      killclient,     {0} },
+	{ "quit",            quit,           {0} },
+	{ "tag1",            tag,            {.ui = 1 << 0} },
+	{ "tag2",            tag,            {.ui = 1 << 1} },
+	{ "tag3",            tag,            {.ui = 1 << 2} },
+	{ "tag4",            tag,            {.ui = 1 << 3} },
+	{ "tag5",            tag,            {.ui = 1 << 4} },
+	{ "tag6",            tag,            {.ui = 1 << 5} },
+	{ "tag7",            tag,            {.ui = 1 << 6} },
+	{ "tag8",            tag,            {.ui = 1 << 7} },
+	{ "tag9",            tag,            {.ui = 1 << 8} },
+	{ "view0",           view,           {.ui = ~0 } },
+	{ "view1",           view,           {.ui = 1 << 0} },
+	{ "view2",           view,           {.ui = 1 << 1} },
+	{ "view3",           view,           {.ui = 1 << 2} },
+	{ "view4",           view,           {.ui = 1 << 3} },
+	{ "view5",           view,           {.ui = 1 << 4} },
+	{ "view6",           view,           {.ui = 1 << 5} },
+	{ "view7",           view,           {.ui = 1 << 6} },
+	{ "view8",           view,           {.ui = 1 << 7} },
+	{ "view9",           view,           {.ui = 1 << 8} },
+};
